Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> INICIO ID ListaInstrucciones FIN
Rule 2     ListaInstrucciones -> INSTRUCCION
Rule 3     ListaInstrucciones -> ListaInstrucciones INSTRUCCION
Rule 4     INSTRUCCION -> ASIGNACION
Rule 5     INSTRUCCION -> IFINSTR
Rule 6     INSTRUCCION -> PRINTINSTR
Rule 7     ASIGNACION -> INT ID IGUAL EXPRESION
Rule 8     ASIGNACION -> STRING ID IGUAL CADENA
Rule 9     ASIGNACION -> FLOAT ID IGUAL EXPRESION
Rule 10    EXPRESION -> NUM
Rule 11    EXPRESION -> ID
Rule 12    EXPRESION -> OPERACION
Rule 13    OPERACION -> ID OPARIT ID
Rule 14    OPERACION -> ID OPARIT NUM
Rule 15    OPERACION -> NUM OPARIT NUM
Rule 16    OPERACION -> NUM OPARIT ID
Rule 17    IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN
Rule 18    CONDICION -> APERTUPAR EXPRESION OPRELAC EXPRESION CIERREPAR
Rule 19    PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR
Rule 20    PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR

Terminals, with rules where they appear

APERTUPAR            : 18 19 20
CADENA               : 8 19
CIERREPAR            : 18 19 20
FIN                  : 1 17
FLOAT                : 9
ID                   : 1 7 8 9 11 13 13 14 16
IF                   : 17
IGUAL                : 7 8 9
INICIO               : 1 17
INT                  : 7
NUM                  : 10 14 15 15 16
OPARIT               : 13 14 15 16
OPRELAC              : 18
PRINT                : 19 20
STRING               : 8
error                : 

Nonterminals, with rules where they appear

ASIGNACION           : 4
CONDICION            : 17
EXPRESION            : 7 9 18 18 20
IFINSTR              : 5
INSTRUCCION          : 2 3
ListaInstrucciones   : 1 3 17
OPERACION            : 12
PRINTINSTR           : 6
Programa             : 0

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . INICIO ID ListaInstrucciones FIN

    INICIO          shift and go to state 2

    Programa                       shift and go to state 1

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> INICIO . ID ListaInstrucciones FIN

    ID              shift and go to state 3


state 3

    (1) Programa -> INICIO ID . ListaInstrucciones FIN
    (2) ListaInstrucciones -> . INSTRUCCION
    (3) ListaInstrucciones -> . ListaInstrucciones INSTRUCCION
    (4) INSTRUCCION -> . ASIGNACION
    (5) INSTRUCCION -> . IFINSTR
    (6) INSTRUCCION -> . PRINTINSTR
    (7) ASIGNACION -> . INT ID IGUAL EXPRESION
    (8) ASIGNACION -> . STRING ID IGUAL CADENA
    (9) ASIGNACION -> . FLOAT ID IGUAL EXPRESION
    (17) IFINSTR -> . IF CONDICION INICIO ListaInstrucciones FIN
    (19) PRINTINSTR -> . PRINT APERTUPAR CADENA CIERREPAR
    (20) PRINTINSTR -> . PRINT APERTUPAR EXPRESION CIERREPAR

    INT             shift and go to state 9
    STRING          shift and go to state 10
    FLOAT           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    ListaInstrucciones             shift and go to state 4
    INSTRUCCION                    shift and go to state 5
    ASIGNACION                     shift and go to state 6
    IFINSTR                        shift and go to state 7
    PRINTINSTR                     shift and go to state 8

state 4

    (1) Programa -> INICIO ID ListaInstrucciones . FIN
    (3) ListaInstrucciones -> ListaInstrucciones . INSTRUCCION
    (4) INSTRUCCION -> . ASIGNACION
    (5) INSTRUCCION -> . IFINSTR
    (6) INSTRUCCION -> . PRINTINSTR
    (7) ASIGNACION -> . INT ID IGUAL EXPRESION
    (8) ASIGNACION -> . STRING ID IGUAL CADENA
    (9) ASIGNACION -> . FLOAT ID IGUAL EXPRESION
    (17) IFINSTR -> . IF CONDICION INICIO ListaInstrucciones FIN
    (19) PRINTINSTR -> . PRINT APERTUPAR CADENA CIERREPAR
    (20) PRINTINSTR -> . PRINT APERTUPAR EXPRESION CIERREPAR

    FIN             shift and go to state 14
    INT             shift and go to state 9
    STRING          shift and go to state 10
    FLOAT           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    INSTRUCCION                    shift and go to state 15
    ASIGNACION                     shift and go to state 6
    IFINSTR                        shift and go to state 7
    PRINTINSTR                     shift and go to state 8

state 5

    (2) ListaInstrucciones -> INSTRUCCION .

    FIN             reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)
    INT             reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)
    STRING          reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)
    FLOAT           reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)
    IF              reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)
    PRINT           reduce using rule 2 (ListaInstrucciones -> INSTRUCCION .)


state 6

    (4) INSTRUCCION -> ASIGNACION .

    FIN             reduce using rule 4 (INSTRUCCION -> ASIGNACION .)
    INT             reduce using rule 4 (INSTRUCCION -> ASIGNACION .)
    STRING          reduce using rule 4 (INSTRUCCION -> ASIGNACION .)
    FLOAT           reduce using rule 4 (INSTRUCCION -> ASIGNACION .)
    IF              reduce using rule 4 (INSTRUCCION -> ASIGNACION .)
    PRINT           reduce using rule 4 (INSTRUCCION -> ASIGNACION .)


state 7

    (5) INSTRUCCION -> IFINSTR .

    FIN             reduce using rule 5 (INSTRUCCION -> IFINSTR .)
    INT             reduce using rule 5 (INSTRUCCION -> IFINSTR .)
    STRING          reduce using rule 5 (INSTRUCCION -> IFINSTR .)
    FLOAT           reduce using rule 5 (INSTRUCCION -> IFINSTR .)
    IF              reduce using rule 5 (INSTRUCCION -> IFINSTR .)
    PRINT           reduce using rule 5 (INSTRUCCION -> IFINSTR .)


state 8

    (6) INSTRUCCION -> PRINTINSTR .

    FIN             reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)
    INT             reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)
    STRING          reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)
    FLOAT           reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)
    IF              reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)
    PRINT           reduce using rule 6 (INSTRUCCION -> PRINTINSTR .)


state 9

    (7) ASIGNACION -> INT . ID IGUAL EXPRESION

    ID              shift and go to state 16


state 10

    (8) ASIGNACION -> STRING . ID IGUAL CADENA

    ID              shift and go to state 17


state 11

    (9) ASIGNACION -> FLOAT . ID IGUAL EXPRESION

    ID              shift and go to state 18


state 12

    (17) IFINSTR -> IF . CONDICION INICIO ListaInstrucciones FIN
    (18) CONDICION -> . APERTUPAR EXPRESION OPRELAC EXPRESION CIERREPAR

    APERTUPAR       shift and go to state 20

    CONDICION                      shift and go to state 19

state 13

    (19) PRINTINSTR -> PRINT . APERTUPAR CADENA CIERREPAR
    (20) PRINTINSTR -> PRINT . APERTUPAR EXPRESION CIERREPAR

    APERTUPAR       shift and go to state 21


state 14

    (1) Programa -> INICIO ID ListaInstrucciones FIN .

    $end            reduce using rule 1 (Programa -> INICIO ID ListaInstrucciones FIN .)


state 15

    (3) ListaInstrucciones -> ListaInstrucciones INSTRUCCION .

    FIN             reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)
    INT             reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)
    STRING          reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)
    FLOAT           reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)
    IF              reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)
    PRINT           reduce using rule 3 (ListaInstrucciones -> ListaInstrucciones INSTRUCCION .)


state 16

    (7) ASIGNACION -> INT ID . IGUAL EXPRESION

    IGUAL           shift and go to state 22


state 17

    (8) ASIGNACION -> STRING ID . IGUAL CADENA

    IGUAL           shift and go to state 23


state 18

    (9) ASIGNACION -> FLOAT ID . IGUAL EXPRESION

    IGUAL           shift and go to state 24


state 19

    (17) IFINSTR -> IF CONDICION . INICIO ListaInstrucciones FIN

    INICIO          shift and go to state 25


state 20

    (18) CONDICION -> APERTUPAR . EXPRESION OPRELAC EXPRESION CIERREPAR
    (10) EXPRESION -> . NUM
    (11) EXPRESION -> . ID
    (12) EXPRESION -> . OPERACION
    (13) OPERACION -> . ID OPARIT ID
    (14) OPERACION -> . ID OPARIT NUM
    (15) OPERACION -> . NUM OPARIT NUM
    (16) OPERACION -> . NUM OPARIT ID

    NUM             shift and go to state 27
    ID              shift and go to state 28

    EXPRESION                      shift and go to state 26
    OPERACION                      shift and go to state 29

state 21

    (19) PRINTINSTR -> PRINT APERTUPAR . CADENA CIERREPAR
    (20) PRINTINSTR -> PRINT APERTUPAR . EXPRESION CIERREPAR
    (10) EXPRESION -> . NUM
    (11) EXPRESION -> . ID
    (12) EXPRESION -> . OPERACION
    (13) OPERACION -> . ID OPARIT ID
    (14) OPERACION -> . ID OPARIT NUM
    (15) OPERACION -> . NUM OPARIT NUM
    (16) OPERACION -> . NUM OPARIT ID

    CADENA          shift and go to state 30
    NUM             shift and go to state 27
    ID              shift and go to state 28

    EXPRESION                      shift and go to state 31
    OPERACION                      shift and go to state 29

state 22

    (7) ASIGNACION -> INT ID IGUAL . EXPRESION
    (10) EXPRESION -> . NUM
    (11) EXPRESION -> . ID
    (12) EXPRESION -> . OPERACION
    (13) OPERACION -> . ID OPARIT ID
    (14) OPERACION -> . ID OPARIT NUM
    (15) OPERACION -> . NUM OPARIT NUM
    (16) OPERACION -> . NUM OPARIT ID

    NUM             shift and go to state 27
    ID              shift and go to state 28

    EXPRESION                      shift and go to state 32
    OPERACION                      shift and go to state 29

state 23

    (8) ASIGNACION -> STRING ID IGUAL . CADENA

    CADENA          shift and go to state 33


state 24

    (9) ASIGNACION -> FLOAT ID IGUAL . EXPRESION
    (10) EXPRESION -> . NUM
    (11) EXPRESION -> . ID
    (12) EXPRESION -> . OPERACION
    (13) OPERACION -> . ID OPARIT ID
    (14) OPERACION -> . ID OPARIT NUM
    (15) OPERACION -> . NUM OPARIT NUM
    (16) OPERACION -> . NUM OPARIT ID

    NUM             shift and go to state 27
    ID              shift and go to state 28

    EXPRESION                      shift and go to state 34
    OPERACION                      shift and go to state 29

state 25

    (17) IFINSTR -> IF CONDICION INICIO . ListaInstrucciones FIN
    (2) ListaInstrucciones -> . INSTRUCCION
    (3) ListaInstrucciones -> . ListaInstrucciones INSTRUCCION
    (4) INSTRUCCION -> . ASIGNACION
    (5) INSTRUCCION -> . IFINSTR
    (6) INSTRUCCION -> . PRINTINSTR
    (7) ASIGNACION -> . INT ID IGUAL EXPRESION
    (8) ASIGNACION -> . STRING ID IGUAL CADENA
    (9) ASIGNACION -> . FLOAT ID IGUAL EXPRESION
    (17) IFINSTR -> . IF CONDICION INICIO ListaInstrucciones FIN
    (19) PRINTINSTR -> . PRINT APERTUPAR CADENA CIERREPAR
    (20) PRINTINSTR -> . PRINT APERTUPAR EXPRESION CIERREPAR

    INT             shift and go to state 9
    STRING          shift and go to state 10
    FLOAT           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    ListaInstrucciones             shift and go to state 35
    INSTRUCCION                    shift and go to state 5
    ASIGNACION                     shift and go to state 6
    IFINSTR                        shift and go to state 7
    PRINTINSTR                     shift and go to state 8

state 26

    (18) CONDICION -> APERTUPAR EXPRESION . OPRELAC EXPRESION CIERREPAR

    OPRELAC         shift and go to state 36


state 27

    (10) EXPRESION -> NUM .
    (15) OPERACION -> NUM . OPARIT NUM
    (16) OPERACION -> NUM . OPARIT ID

    OPRELAC         reduce using rule 10 (EXPRESION -> NUM .)
    CIERREPAR       reduce using rule 10 (EXPRESION -> NUM .)
    FIN             reduce using rule 10 (EXPRESION -> NUM .)
    INT             reduce using rule 10 (EXPRESION -> NUM .)
    STRING          reduce using rule 10 (EXPRESION -> NUM .)
    FLOAT           reduce using rule 10 (EXPRESION -> NUM .)
    IF              reduce using rule 10 (EXPRESION -> NUM .)
    PRINT           reduce using rule 10 (EXPRESION -> NUM .)
    OPARIT          shift and go to state 37


state 28

    (11) EXPRESION -> ID .
    (13) OPERACION -> ID . OPARIT ID
    (14) OPERACION -> ID . OPARIT NUM

    OPRELAC         reduce using rule 11 (EXPRESION -> ID .)
    CIERREPAR       reduce using rule 11 (EXPRESION -> ID .)
    FIN             reduce using rule 11 (EXPRESION -> ID .)
    INT             reduce using rule 11 (EXPRESION -> ID .)
    STRING          reduce using rule 11 (EXPRESION -> ID .)
    FLOAT           reduce using rule 11 (EXPRESION -> ID .)
    IF              reduce using rule 11 (EXPRESION -> ID .)
    PRINT           reduce using rule 11 (EXPRESION -> ID .)
    OPARIT          shift and go to state 38


state 29

    (12) EXPRESION -> OPERACION .

    OPRELAC         reduce using rule 12 (EXPRESION -> OPERACION .)
    CIERREPAR       reduce using rule 12 (EXPRESION -> OPERACION .)
    FIN             reduce using rule 12 (EXPRESION -> OPERACION .)
    INT             reduce using rule 12 (EXPRESION -> OPERACION .)
    STRING          reduce using rule 12 (EXPRESION -> OPERACION .)
    FLOAT           reduce using rule 12 (EXPRESION -> OPERACION .)
    IF              reduce using rule 12 (EXPRESION -> OPERACION .)
    PRINT           reduce using rule 12 (EXPRESION -> OPERACION .)


state 30

    (19) PRINTINSTR -> PRINT APERTUPAR CADENA . CIERREPAR

    CIERREPAR       shift and go to state 39


state 31

    (20) PRINTINSTR -> PRINT APERTUPAR EXPRESION . CIERREPAR

    CIERREPAR       shift and go to state 40


state 32

    (7) ASIGNACION -> INT ID IGUAL EXPRESION .

    FIN             reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)
    INT             reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)
    STRING          reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)
    FLOAT           reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)
    IF              reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)
    PRINT           reduce using rule 7 (ASIGNACION -> INT ID IGUAL EXPRESION .)


state 33

    (8) ASIGNACION -> STRING ID IGUAL CADENA .

    FIN             reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)
    INT             reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)
    STRING          reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)
    FLOAT           reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)
    IF              reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)
    PRINT           reduce using rule 8 (ASIGNACION -> STRING ID IGUAL CADENA .)


state 34

    (9) ASIGNACION -> FLOAT ID IGUAL EXPRESION .

    FIN             reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)
    INT             reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)
    STRING          reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)
    FLOAT           reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)
    IF              reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)
    PRINT           reduce using rule 9 (ASIGNACION -> FLOAT ID IGUAL EXPRESION .)


state 35

    (17) IFINSTR -> IF CONDICION INICIO ListaInstrucciones . FIN
    (3) ListaInstrucciones -> ListaInstrucciones . INSTRUCCION
    (4) INSTRUCCION -> . ASIGNACION
    (5) INSTRUCCION -> . IFINSTR
    (6) INSTRUCCION -> . PRINTINSTR
    (7) ASIGNACION -> . INT ID IGUAL EXPRESION
    (8) ASIGNACION -> . STRING ID IGUAL CADENA
    (9) ASIGNACION -> . FLOAT ID IGUAL EXPRESION
    (17) IFINSTR -> . IF CONDICION INICIO ListaInstrucciones FIN
    (19) PRINTINSTR -> . PRINT APERTUPAR CADENA CIERREPAR
    (20) PRINTINSTR -> . PRINT APERTUPAR EXPRESION CIERREPAR

    FIN             shift and go to state 41
    INT             shift and go to state 9
    STRING          shift and go to state 10
    FLOAT           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    INSTRUCCION                    shift and go to state 15
    ASIGNACION                     shift and go to state 6
    IFINSTR                        shift and go to state 7
    PRINTINSTR                     shift and go to state 8

state 36

    (18) CONDICION -> APERTUPAR EXPRESION OPRELAC . EXPRESION CIERREPAR
    (10) EXPRESION -> . NUM
    (11) EXPRESION -> . ID
    (12) EXPRESION -> . OPERACION
    (13) OPERACION -> . ID OPARIT ID
    (14) OPERACION -> . ID OPARIT NUM
    (15) OPERACION -> . NUM OPARIT NUM
    (16) OPERACION -> . NUM OPARIT ID

    NUM             shift and go to state 27
    ID              shift and go to state 28

    EXPRESION                      shift and go to state 42
    OPERACION                      shift and go to state 29

state 37

    (15) OPERACION -> NUM OPARIT . NUM
    (16) OPERACION -> NUM OPARIT . ID

    NUM             shift and go to state 43
    ID              shift and go to state 44


state 38

    (13) OPERACION -> ID OPARIT . ID
    (14) OPERACION -> ID OPARIT . NUM

    ID              shift and go to state 45
    NUM             shift and go to state 46


state 39

    (19) PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .

    FIN             reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)
    INT             reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)
    STRING          reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)
    FLOAT           reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)
    IF              reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)
    PRINT           reduce using rule 19 (PRINTINSTR -> PRINT APERTUPAR CADENA CIERREPAR .)


state 40

    (20) PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .

    FIN             reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)
    INT             reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)
    STRING          reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)
    FLOAT           reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)
    IF              reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)
    PRINT           reduce using rule 20 (PRINTINSTR -> PRINT APERTUPAR EXPRESION CIERREPAR .)


state 41

    (17) IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .

    FIN             reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)
    INT             reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)
    STRING          reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)
    FLOAT           reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)
    IF              reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)
    PRINT           reduce using rule 17 (IFINSTR -> IF CONDICION INICIO ListaInstrucciones FIN .)


state 42

    (18) CONDICION -> APERTUPAR EXPRESION OPRELAC EXPRESION . CIERREPAR

    CIERREPAR       shift and go to state 47


state 43

    (15) OPERACION -> NUM OPARIT NUM .

    OPRELAC         reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    CIERREPAR       reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    FIN             reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    INT             reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    STRING          reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    FLOAT           reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    IF              reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)
    PRINT           reduce using rule 15 (OPERACION -> NUM OPARIT NUM .)


state 44

    (16) OPERACION -> NUM OPARIT ID .

    OPRELAC         reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    CIERREPAR       reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    FIN             reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    INT             reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    STRING          reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    FLOAT           reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    IF              reduce using rule 16 (OPERACION -> NUM OPARIT ID .)
    PRINT           reduce using rule 16 (OPERACION -> NUM OPARIT ID .)


state 45

    (13) OPERACION -> ID OPARIT ID .

    OPRELAC         reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    CIERREPAR       reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    FIN             reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    INT             reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    STRING          reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    FLOAT           reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    IF              reduce using rule 13 (OPERACION -> ID OPARIT ID .)
    PRINT           reduce using rule 13 (OPERACION -> ID OPARIT ID .)


state 46

    (14) OPERACION -> ID OPARIT NUM .

    OPRELAC         reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    CIERREPAR       reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    FIN             reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    INT             reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    STRING          reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    FLOAT           reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    IF              reduce using rule 14 (OPERACION -> ID OPARIT NUM .)
    PRINT           reduce using rule 14 (OPERACION -> ID OPARIT NUM .)


state 47

    (18) CONDICION -> APERTUPAR EXPRESION OPRELAC EXPRESION CIERREPAR .

    INICIO          reduce using rule 18 (CONDICION -> APERTUPAR EXPRESION OPRELAC EXPRESION CIERREPAR .)

